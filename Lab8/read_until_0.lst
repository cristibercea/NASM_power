     1                                       
     2                                     ; 2. Read numbers (in base 10) until the value 0 is read from the keyboard. 
     3                                  ;Compute and display the number of the inserted values and the sum of these values.
     4                                  ;Eg: 1, 3, 4, 0 => 3 values and sum = 8 
     5                                  
     6                                  bits 32 ; assembling for the 32 bits architecture
     7                                  global start        
     8                                  extern exit  , printf, scanf             ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                   
    16                                  
    17                                   ;variabila x in caRE VOM RETINE NR CITITE
    18 00000000 00000000                 x dd 0
    19 00000004 256400                   formatcitire db '%d', 0
    20 00000007 20532D617520636974-      mesajafisare db ' S-au citit %d numere si suma lor este %d', 0
    20 00000010 6974202564206E756D-
    20 00000019 657265207369207375-
    20 00000022 6D61206C6F72206573-
    20 0000002B 746520256400       
    21 00000031 00000000                 suma dd 0
    22 00000035 496E74726F64756365-      inceput db 'Introduceti nr. Cand va opriti introduceti 0: ', 0
    22 0000003E 7469206E722E204361-
    22 00000047 6E64207661206F7072-
    22 00000050 69746920696E74726F-
    22 00000059 64756365746920303A-
    22 00000062 2000               
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 BB00000000                      mov ebx, 0 ; pt a count cifrele
    26                                          ;afisare mesaj inceput pe ecran
    27 00000005 68[35000000]                    push dword inceput
    28 0000000A FF15[00000000]                  call [printf]
    29 00000010 83C404                          add esp, 4*1
    30                                          repeta:
    31                                              ;citire o val pentru x
    32 00000013 68[00000000]                        push dword x
    33 00000018 68[04000000]                        push dword formatcitire
    34 0000001D FF15[00000000]                      call [scanf]
    35 00000023 83C408                              add esp, 4*2
    36                                              
    37                                              ;adunam la suma si incrememntam nr de val citite
    38                                              
    39 00000026 A1[00000000]                        mov eax, [x]
    40 0000002B 0105[31000000]                      add [suma], eax
    41 00000031 43                                  inc ebx
    42                                              
    43                                              ; verificam daca s-a introdus 0 de la tastatura
    44 00000032 83F800                              cmp eax, 0 
    45 00000035 7402                                JE finalsiafisare
    46 00000037 75DA                                JNE repeta
    47                                              
    48                                              finalsiafisare:
    49 00000039 4B                                      dec ebx   ; pentru ca il contorizeaza si pe 0
    50                                                  ; S-au citit %d numere si suma lor este %d', 0
    51 0000003A FF35[31000000]                          push dword [suma]
    52 00000040 53                                      push ebx
    53 00000041 68[07000000]                            push dword mesajafisare
    54 00000046 FF15[00000000]                          call [printf]
    55 0000004C 83C40C                                  add esp, 4*3
    56                                          
    57                                      
    58                                          ; exit(0)
    59 0000004F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    60 00000051 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
